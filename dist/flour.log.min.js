flour.addView("flour_log",function(){var o=this;o.template="flour_log",o.events={"click .flour-log-tab":"setTabEvent","click .flour-log-toggle":"toggleConsole","click .flour-log-expand":"expandLog"};var e=!1,l="console",t=!1,i=!1;o.consoleView=!1,o.viewsView=!1,o.storeView=!1,o.init=function(){o.el.removeClass("flour-view"),o.el.addClass("flour-log"),o.consoleView=o.getView("flour_log_console",{}),o.storeView=o.getView("flour_log_store",{}),o.viewsView=o.getView("flour_log_views",{}),o.viewsView.on("updateViewCount",function(e){o.set("view_count",e,!1)}),o.storeView.on("updateStoreCount",function(e){o.set("store_count",e,!1)}),o.set("store_count",0,!1),o.set("view_count",0,!1),e=void 0===localStorage.getItem("flour_console_open")?0:parseInt(localStorage.getItem("flour_console_open")),l=void 0===localStorage.getItem("flour_console_tab")?"console":localStorage.getItem("flour_console_tab"),e&&o.el.addClass("open"),o.render()},o.postRender=function(){t=o.find(".flour-log-tab"),i=o.find(".flour-log-pane"),o.setTab(l)},o.setTabEvent=function(e,l){o.setTab(l.data("tab"))},o.setTab=function(o){l=o,t.removeClass("flour-log-tab-active"),i.removeClass("flour-log-pane-active"),$.each(t,function(o,e){var t=$(e);t.data("tab")===l&&t.addClass("flour-log-tab-active")}),$.each(i,function(o,e){var t=$(e);t.data("tab")===l&&t.addClass("flour-log-pane-active")}),localStorage.setItem("flour_console_tab",o)},o.toggleConsole=function(){o.el.hasClass("open")?(localStorage.setItem("flour_console_open",0),o.el.addClass("close"),o.el.one("animationend webkitAnimationEnd oAnimationEnd MSAnimationEnd",function(){o.el.off("animationend webkitAnimationEnd oAnimationEnd MSAnimationEnd"),o.el.removeClass("open"),o.el.removeClass("close")})):(localStorage.setItem("flour_console_open",1),o.el.addClass("open"))},o.log=function(e,l){o.consoleView.createLog(e,l,"log")},o.warn=function(e,l){o.consoleView.createLog(e,l,"warn")},o.error=function(e,l){o.consoleView.createLog(e,l,"error")}}),flour.addView("flour_log_console",function(){var o=this;o.template="flour_log_console",o.events={"click .flour-log-clear-console":"clearLogs","click .flour-log-expand":"expandLog"};var e=0,l=!1;o.consoleList=!1,o.init=function(){o.consoleList=o.getList("flour_log_console_list"),o.el.removeClass("flour-view"),o.render()},o.createLog=function(t,i,r){var s={data:t,type:r,extra:i,count:!1};if((flour.isObject(t)||flour.isArray(t))&&(s.is_object=!0,s.data=flour.filters.json_format(t)),void 0!==s.extra&&(flour.isObject(i)||flour.isArray(i))&&(s.extra_is_object=!0,s.extra=flour.filters.json_format(i)),s.data===l){var a=o.consoleList.get(e,"count");a=a===!1?2:a+1,o.consoleList.set(e,"count",a)}else e++,s.id=e,o.consoleList.add(s),l=s.data},o.clearLogs=function(){l=void 0,o.consoleList.removeAll()},o.expandLog=function(e,l){var t=l.data("id"),i=o.consoleList.getItem(t);i.el.toggleClass("flour-log-expanded")}}),flour.addList("flour_log_console_list",function(){var o=this;o.key="id",o.template="flour_log_console_item",o.itemElClass="flour-log-console-item",o.init=function(){o.el.removeClass("flour-list")}}),flour.addView("flour_log_store",function(){var o=this;o.template="flour_log_store",o.events={},o.storeList=!1,o.init=function(){o.storeList=o.getList("flour_log_store_list"),o.subscribe("flour:store_update",function(e){o.displayItems(e)}),o.displayItems(flour.store.get()),o.el.removeClass("flour-view"),o.render()},o.displayItems=function(e){var l=0;o.storeList.removeAll();for(var t in e){var i={key:t,data:e[t]};flour.isObject(i.data)&&(i.is_object=!0,i.data=flour.filters.json_format(e[t])),o.storeList.add(i),l++}o.trigger("updateStoreCount",l)}}),flour.addList("flour_log_store_list",function(){var o=this;o.template="flour_log_store_item",o.itemElClass="flour-log-store-item",o.key="key",o.init=function(){o.el.removeClass("flour-list")}}),flour.addView("flour_log_views",function(){var o=this;o.template="flour_log_views",o.events={};var e=0;o.init=function(){o.el.removeClass("flour-view"),o.viewList=flour.getList("flour_log_views_list"),o.subscribe("flour:view_create",function(e){o.increaseViewCount(),o.addViewToList(e)}),o.subscribe("flour:view_destroy",function(e){o.decreaseViewCount(),o.removeViewFromList(e)}),o.subscribe("flour:list_create",function(e){o.increaseViewCount(),o.addViewToList(e)}),o.subscribe("flour:list_destroy",function(e){o.decreaseViewCount(),o.removeViewFromList(e)}),o.render()},o.increaseViewCount=function(){e++,o.trigger("updateViewCount",e)},o.decreaseViewCount=function(){e--,o.trigger("updateViewCount",e)},o.addViewToList=function(e){var l=e.view?e.view:e.list,t={id:l.id,name:e.name,template:l.template,helpers:l.helpers?l.helpers.join(","):"none"};o.viewList.add(t)},o.removeViewFromList=function(e){o.viewList.remove(e)}}),flour.addList("flour_log_views_list",function(){var o=this;o.template="flour_log_views_item",o.itemElClass="flour-log-view-item",o.key="id",o.init=function(){o.el.removeClass("flour-list")}}),flour.addTemplate("flour_log",'<div class="flour-log-toggle"></div> <div class="flour-log-console">  <div class="flour-log-tabs">    <div class="flour-log-tab flour-log-tab-active" data-tab="console">Console</div>     <div class="flour-log-tab" data-tab="views">Views <span class="flour-log-tab-stat" flour-text="view_count"></span></div>     <div class="flour-log-tab" data-tab="store">Store <span class="flour-log-tab-stat" flour-text="store_count"></span></div>   </div>   <div class="flour-log-panes">    <div class="flour-log-pane" data-tab="console" flour-view="consoleView"></div>     <div class="flour-log-pane" data-tab="views" flour-view="viewsView"></div>     <div class="flour-log-pane" data-tab="store" flour-view="storeView"></div>   </div> </div>'),flour.addTemplate("flour_log_console",'<div> <div class="flour-log-console-actions"><a class="flour-log-clear-console">Clear</a></div>  <div flour-view="consoleList">  </div> </div>'),flour.addTemplate("flour_log_console_item",'<div class="flour-log-console-item-inner flour-log-item-{{ type }}">   {{#if is_object }}     <pre>{{ data }}</pre>  {{else}}    <div>{{{ data }}} </div>  {{/if}}  {{#if extra}}  <div class="flour-log-extra">  {{#if extra_is_object}}  <pre>{{ extra }}</pre>  {{else}}  <div>{{{ extra }}}</div>  {{/if}}  </div>  {{/if}}  <div class="flour-log-controls">  {{#if extra}}  <div class="flour-log-expand" data-id="{{ id }}"></div>  {{/if}}  {{#if count}}    <div class="flour-log-count">{{ count }}</div>  {{/if}}</div></div>'),flour.addTemplate("flour_log_store",'<div>   <div flour-view="storeList"></div> </div>'),flour.addTemplate("flour_log_store_item",'<div class="flour-log-store-item-inner">   <div class="flour-log-store-item-key">{{ key }}</div>   {{#if is_object }}     <pre>{{ data }}</pre>  {{else}}    {{ data }}   {{/if}}</div>'),flour.addTemplate("flour_log_views",'<div>   <div flour-view="viewList"></div> </div>'),flour.addTemplate("flour_log_views_item",'<div class="flour-log-view-item-inner">   <div class="flour-log-view-item-name">{{ name }}</div>   <div class="flour-log-view-item-stat">Id: {{ id }}</div>  <div class="flour-log-view-item-stat">Template: {{ template }}</div>  <div class="flour-log-view-item-stat">Helpers: {{ helpers }}</div></div>');var styleTag=document.createElement("style");styleTag.innerHTML="/*||| Contains the css for our flour log console||*/.flour-log{  position: fixed;  bottom: 10px;  right: 10px;  z-index: 100;}.flour-log-toggle{  height: 30px;  width: 30px;  background-color: rgba(0,0,0,.75);  color: #fff;  line-height: 30px;  border-radius: 15px;  cursor: pointer;}.flour-log-console{  position: fixed;  top: 10px;  right: 10px;  bottom: 50px;  width: 400px;    background-color: rgba(0,0,0,.75);  color: #fff;  display: none;}@media(max-width: 550px){  .flour-log-console{    top: 0px;    right: 0px;    left: 0px;    width: auto;  }}.flour-log.open .flour-log-console{  display: block;  -webkit-animation-name: openConsole;  animation-name: openConsole;  -webkit-animation-duration: 200ms;  animation-duration: 200ms;  -webkit-animation-fill-mode: both;  animation-fill-mode: both;  -webkit-transform-origin: right bottom;  transform-origin: right bottom;}.flour-log.close .flour-log-console{  -webkit-animation-name: closeConsole;  animation-name: closeConsole;  -webkit-animation-duration: 200ms;  animation-duration: 200ms;  -webkit-animation-fill-mode: both;  animation-fill-mode: both;  -webkit-transform-origin: right bottom;  transform-origin: right bottom;}.flour-log-tabs{  display: -webkit-flex;  display: flex;  background-color: rgba(0,0,0,.3);}.flour-log-tab{  position: relative;  padding: 10px;  text-align: center;  cursor: pointer;  flex: 1 0 0;  color: rgba(255, 255, 255, .7);  border-bottom: solid 2px rgba(255, 255, 255, .3);}.flour-log-tab-active{  color: #fff;  border-bottom: solid 2px #fff;}.flour-log-tab:last-of-type{  border-right: 0;}.flour-log-tab-stat{  display: inline-block;  margin: 0 0 0 4px;  width: 20px;  height: 20px;    font-size: 14px;  line-height: 20px;  text-align: center;  background-color: #039BE5;  border-radius: 10px;}.flour-log-pane{  display: none;  position: absolute;  top: 46px;  right: 0px;  bottom: 0px;  left: 0px;  overflow: auto;  -webkit-overflow-scrolling:touch;}.flour-log-pane-active{  display: block;}/*|| Console view styles|*/.flour-log-view-item{  position: relative;  border-bottom: solid 1px rgba(0, 0, 0, .1);}.flour-log-view-item-name{  position: absolute;  top: 10px;  right: 10px;  font-size: 10px;}.flour-log-view-item-stat{  font-size: 12px;}.flour-log-view-item-inner{  border-left: solid 2px #03A9F4;  padding: 10px;  font-size: 12px;}.flour-log-view-item pre{  margin: 0;  padding: 0;  font-size: 12px;  font-family: monospace;  overflow: hidden;}/*|| Console log styles|*/.flour-log-console-actions{  padding: 10px;  border-bottom: solid 1px rgba(0, 0, 0, .1);}.flour-log-console-actions a{  cursor: pointer;}.flour-log-console-item{  border-bottom: solid 1px rgba(0, 0, 0, .1);}.flour-log-console-item-inner{  position: relative;  padding: 10px;  font-size: 12px;  font-family: monospace;}.flour-log-item-log{  border-left: solid 3px #03A9F4;}.flour-log-item-warn{  border-left: solid 3px #fdd835;}.flour-log-item-error{  border-left: solid 3px #ef5350;}.flour-log-console-item pre{  margin: 0;  padding: 0;  font-size: 12px;  font-family: monospace;  overflow: hidden;  word-wrap: break-word;}.flour-log-console-item-inner .flour-log-controls{  position: absolute;  display: flex;  top: 10px;  right: 10px;}.flour-log-console-item-inner .flour-log-extra{  display: none;}.flour-log-console-item-inner .flour-log-expand{  width: 20px;  height: 20px;  margin-right: 5px;  color: #fff;  font-size: 14px;  line-height: 20px;  text-align: center;  background-color: rgba(0,0,0,.2);  border-radius: 10px;  cursor: pointer;}.flour-log-console-item-inner .flour-log-expand::before{  content: '+';}.flour-log-console-item-inner .flour-log-count{  width: 20px;  height: 20px;    color: #fff;  font-size: 14px;  line-height: 20px;  text-align: center;  background-color: #039BE5;  border-radius: 10px;}.flour-log-expanded .flour-log-console-item-inner .flour-log-extra{  display: block;}.flour-log-expanded .flour-log-console-item-inner .flour-log-expand::before{  content: '-';}/*|| Console store styles|*/.flour-log-store-item{  position: relative;  border-bottom: solid 1px rgba(0, 0, 0, .1);}.flour-log-store-item-key{  position: absolute;  top: 10px;  right: 10px;  font-size: 10px;}.flour-log-store-item-inner{  border-left: solid 2px #03A9F4;  padding: 10px;  font-size: 12px;}.flour-log-store-item pre{  margin: 0;  padding: 0;  font-size: 12px;  font-family: monospace;  overflow: hidden;}/*|| Open console|*/@-webkit-keyframes openConsole {  0% {    opacity: 0;    transform: translate(50%, 0%);  }  100% {    opacity: 1;    transform: translate(0%, 0%);  }}@keyframes openConsole {  0% {    opacity: 0;    transform: translate(50%, 0%);  }  100% {    opacity: 1;    transform: translate(0%, 0%);  }}/*|| Close console|*/@-webkit-keyframes closeConsole {  0% {    opacity: 1;    transform: translate(0%, 0%);  }  100% {    opacity: 0;    transform: translate(50%, 0%);  }}@keyframes closeConsole {  0% {    opacity: 1;    transform: translate(0%, 0%);  }  100% {    opacity: 0;    transform: translate(50%, 0%);  }}",document.getElementsByTagName("head")[0].appendChild(styleTag),flour.logView=flour.getView("flour_log"),$(function(){window.onerror=function(o,e,l,t,i){var r=o.toLowerCase(),s="script error";return r.indexOf(s)>-1?flour.error("Script Error: See Browser Console for Detail"):(e=e.split("/").pop(),flour.error(o+"<br />"+e+" ("+l+", "+t+")",JSON.stringify(i))),!1},$("body").append(flour.logView.el)});